name: maes-platform

services:
  postgres:
    image: timescale/timescaledb:latest-pg14
    container_name: maes-postgres
    environment:
      POSTGRES_DB: maes_db
      POSTGRES_USER: maes_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-maes_secure_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - maes-network

  redis:
    image: redis:7-alpine
    container_name: maes-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_secure_password}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - maes-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: maes-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - maes-network

  api:
    build: ./api
    container_name: maes-api
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      DATABASE_URL: postgresql://maes_user:${POSTGRES_PASSWORD:-maes_secure_password}@postgres:5432/maes_db
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis_secure_password}@redis:6379
      ELASTICSEARCH_URL: http://elasticsearch:9200
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_here}
      SERVICE_AUTH_TOKEN: ${SERVICE_AUTH_TOKEN:-service_internal_token_change_in_production}
      PORT: 3000
    ports:
      - "3000:3000"
    volumes:
      - ./api:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
      - elasticsearch
    networks:
      - maes-network
    command: npm run dev

  extractor:
    build: ./services/extractor
    container_name: maes-extractor
    environment:
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis_secure_password}@redis:6379
      DATABASE_URL: postgresql://maes_user:${POSTGRES_PASSWORD:-maes_secure_password}@postgres:5432/maes_db
    volumes:
      - ./services/extractor:/app
      - /Users/ruji/Microsoft-Extractor-Suite:/extractor-suite:ro
      - extractor_output:/output
    depends_on:
      - redis
      - postgres
    networks:
      - maes-network

  analyzer:
    build: ./services/analyzer
    container_name: maes-analyzer
    environment:
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis_secure_password}@redis:6379
      DATABASE_URL: postgresql://maes_user:${POSTGRES_PASSWORD:-maes_secure_password}@postgres:5432/maes_db
      ELASTICSEARCH_URL: http://elasticsearch:9200
      SERVICE_AUTH_TOKEN: ${SERVICE_AUTH_TOKEN:-service_internal_token_change_in_production}
    volumes:
      - ./services/analyzer:/app
      - /Users/ruji/Microsoft-Analyzer-Suite:/analyzer-suite:ro
      - extractor_output:/input:ro
      - analyzer_output:/output
    depends_on:
      - redis
      - postgres
      - elasticsearch
    networks:
      - maes-network

  frontend:
    build: ./frontend
    container_name: maes-frontend
    environment:
      VITE_API_URL: ${API_URL:-http://localhost:3000}
    ports:
      - "8080:80"
    depends_on:
      - api
    networks:
      - maes-network

volumes:
  postgres_data:
  redis_data:
  es_data:
  extractor_output:
  analyzer_output:

networks:
  maes-network:
    driver: bridge